--- old.privacyFunctionReturnTypeDeclFile.js
+++ new.privacyFunctionReturnTypeDeclFile.js
@@= skipped -2160, +2160 lines =@@
 export declare class publicClass {
 }
 export interface publicInterfaceWithPrivateParmeterTypes {
-    new (): privateClass;
-    (): privateClass;
-    [x: number]: privateClass;
-    myMethod(): privateClass;
+    new (): privateClass; // Error
+    (): privateClass; // Error
+    [x: number]: privateClass; // Error
+    myMethod(): privateClass; // Error
 }
 export interface publicInterfaceWithPublicParmeterTypes {
     new (): publicClass;
@@= skipped -35, +35 lines =@@
 export declare function publicFunctionWithPublicParmeterTypes(): publicClass;
 export declare function publicFunctionWithPrivateParmeterTypes1(): privateClass;
 export declare function publicFunctionWithPublicParmeterTypes1(): publicClass;
-export declare function publicAmbientFunctionWithPrivateParmeterTypes(): privateClass;
+export declare function publicAmbientFunctionWithPrivateParmeterTypes(): privateClass; // Error
 export declare function publicAmbientFunctionWithPublicParmeterTypes(): publicClass;
 export interface publicInterfaceWithPrivateModuleParameterTypes {
-    new (): privateModule.publicClass;
-    (): privateModule.publicClass;
-    [x: number]: privateModule.publicClass;
-    myMethod(): privateModule.publicClass;
+    new (): privateModule.publicClass; // Error
+    (): privateModule.publicClass; // Error
+    [x: number]: privateModule.publicClass; // Error
+    myMethod(): privateModule.publicClass; // Error
 }
 export declare class publicClassWithPrivateModuleParameterTypes {
     static myPublicStaticMethod(): privateModule.publicClass;
@@= skipped -16, +16 lines =@@
 }
 export declare function publicFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass;
 export declare function publicFunctionWithPrivateModuleParameterTypes1(): privateModule.publicClass;
-export declare function publicAmbientFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass;
+export declare function publicAmbientFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass; // Error
 export declare namespace publicModule {
     class privateClass {
     }
     export class publicClass {
     }
     export interface publicInterfaceWithPrivateParmeterTypes {
-        new (): privateClass;
-        (): privateClass;
-        [x: number]: privateClass;
-        myMethod(): privateClass;
+        new (): privateClass; // Error
+        (): privateClass; // Error
+        [x: number]: privateClass; // Error
+        myMethod(): privateClass; // Error
     }
     export interface publicInterfaceWithPublicParmeterTypes {
         new (): publicClass;
@@= skipped -42, +42 lines =@@
     export function publicFunctionWithPublicParmeterTypes(): publicClass;
     export function publicFunctionWithPrivateParmeterTypes1(): privateClass;
     export function publicFunctionWithPublicParmeterTypes1(): publicClass;
-    export function publicAmbientFunctionWithPrivateParmeterTypes(): privateClass;
+    export function publicAmbientFunctionWithPrivateParmeterTypes(): privateClass; // Error
     export function publicAmbientFunctionWithPublicParmeterTypes(): publicClass;
     export interface publicInterfaceWithPrivateModuleParameterTypes {
-        new (): privateModule.publicClass;
-        (): privateModule.publicClass;
-        [x: number]: privateModule.publicClass;
-        myMethod(): privateModule.publicClass;
+        new (): privateModule.publicClass; // Error
+        (): privateModule.publicClass; // Error
+        [x: number]: privateModule.publicClass; // Error
+        myMethod(): privateModule.publicClass; // Error
     }
     export class publicClassWithPrivateModuleParameterTypes {
         static myPublicStaticMethod(): privateModule.publicClass;
@@= skipped -16, +16 lines =@@
     }
     export function publicFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass;
     export function publicFunctionWithPrivateModuleParameterTypes1(): privateModule.publicClass;
-    export function publicAmbientFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass;
+    export function publicAmbientFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass; // Error
     export {};
 }
 declare namespace privateModule {
@@= skipped -152, +152 lines =@@
         export {};
     }
     export interface publicInterfaceWithPrivateParmeterTypes {
-        new (): privateClass;
-        (): privateClass;
-        [x: number]: privateClass;
-        myMethod(): privateClass;
+        new (): privateClass; // Error
+        (): privateClass; // Error
+        [x: number]: privateClass; // Error
+        myMethod(): privateClass; // Error
     }
     export interface publicInterfaceWithPublicParmeterTypes {
         new (): publicClass;
@@= skipped -35, +35 lines =@@
     export function publicFunctionWithPublicParmeterTypes(): publicClass;
     export function publicFunctionWithPrivateParmeterTypes1(): privateClass;
     export function publicFunctionWithPublicParmeterTypes1(): publicClass;
-    export function publicAmbientFunctionWithPrivateParmeterTypes(): privateClass;
+    export function publicAmbientFunctionWithPrivateParmeterTypes(): privateClass; // Error
     export function publicAmbientFunctionWithPublicParmeterTypes(): publicClass;
     export interface publicInterfaceWithPrivateModuleParameterTypes {
-        new (): privateModule.publicClass;
-        (): privateModule.publicClass;
-        [x: number]: privateModule.publicClass;
-        myMethod(): privateModule.publicClass;
+        new (): privateModule.publicClass; // Error
+        (): privateModule.publicClass; // Error
+        [x: number]: privateModule.publicClass; // Error
+        myMethod(): privateModule.publicClass; // Error
     }
     export class publicClassWithPrivateModuleParameterTypes {
         static myPublicStaticMethod(): privateModule.publicClass;
@@= skipped -16, +16 lines =@@
     }
     export function publicFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass;
     export function publicFunctionWithPrivateModuleParameterTypes1(): privateModule.publicClass;
-    export function publicAmbientFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass;
+    export function publicAmbientFunctionWithPrivateModuleParameterTypes(): privateModule.publicClass; // Error
     export {};
 }