--- old.declarationEmitBindingPatternsUnused.js
+++ new.declarationEmitBindingPatternsUnused.js
@@= skipped -208, +208 lines =@@
 type Named = {
     name: string;
 };
+// Resons we can't remove aliases that are not used in the function signature: 
+// 1.Causes duplicate identifier if we remove alias
 declare function duplicateIndetifiers({ name: alias, name: alias2 }: Named): void;
 declare function duplicateIndetifiers2(name: string, { name: alias }: Named): void;
 declare function duplicateIndetifiers3({ name: alias }: Named, { name: alias2 }: Named): void;
 declare let value: string;
+// 2.Can change in meaning for typeof value if we remove alias
 declare function shadowedVariable({ value: alias }: {
     value: string;
 }): typeof value;
@@= skipped -18, +21 lines =@@
     function: string;
 }): typeof alias;
 declare function referencedInInferredType({ name: alias }: Named): {
-    name: typeof alias;
+    name: string;
 };
-declare function referencedInNestedFunction({ name: alias }: Named): (p: typeof alias) => void;
+declare function referencedInNestedFunction({ name: alias }: Named): (p: string) => void;
 declare function referencedNestedAlias({ p: { name: alias } }: {
     p: Named;
 }): typeof alias;