--- old.declarationEmitCastReusesTypeNode3(strictnullchecks=true).js
+++ new.declarationEmitCastReusesTypeNode3(strictnullchecks=true).js
@@= skipped -33, +33 lines =@@
 type P = {} & {
     name: string;
 };
-export declare let vLet: P;
-export declare const vConst: P;
-export declare function fn(p?: P): void;
-export declare function fnWithRequiredDefaultParam(p: P | undefined, req: number): void;
+export declare let vLet: {
+    name: string;
+};
+export declare const vConst: {
+    name: string;
+};
+export declare function fn(p?: {
+    name: string;
+}): void;
+export declare function fnWithRequiredDefaultParam(p: {
+    name: string;
+}, req: number): void;
 export declare class C {
-    ctorField: P;
-    field: P;
-    optField?: P;
-    readonly roFiled: P;
-    method(p?: P): void;
-    methodWithRequiredDefault(p: P | undefined, req: number): void;
-    constructor(ctorField?: P);
-    get x(): P;
-    set x(v: P);
+    ctorField: {
+        name: string;
+    };
+    field: {
+        name: string;
+    };
+    optField?: {
+        name: string;
+    } | undefined;
+    readonly roFiled: {
+        name: string;
+    };
+    method(p?: {
+        name: string;
+    }): void;
+    methodWithRequiredDefault(p: {
+        name: string;
+    }, req: number): void;
+    constructor(ctorField?: {
+        name: string;
+    });
+    get x(): {
+        name: string;
+    };
+    set x(v: {
+        name: string;
+    });
 }
-declare const _default: P;
+declare const _default: {
+    name: string;
+};
 export default _default;
-export declare function fnWithPartialAnnotationOnDefaultparam(x: P | undefined, b: number): void;
+// allows `undefined` on the input side, thanks to the initializer
+export declare function fnWithPartialAnnotationOnDefaultparam(x: P, b: number): void;