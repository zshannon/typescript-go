--- old.exhaustiveSwitchStatements1.js
+++ new.exhaustiveSwitchStatements1.js
@@= skipped -251, +251 lines =@@
 }

 //// [exhaustiveSwitchStatements1.js]
-"use strict";
 function f1(x) {
     if (!!true) {
         switch (x) {
@@= skipped -228, +227 lines =@@
 declare function f1(x: 1 | 2): string;
 declare function f2(x: 1 | 2): void;
 declare function f3(x: 1 | 2): 10 | 20;
+// Repro from #11572
 declare enum E {
     A = 0,
     B = 1
 }
 declare function f(e: E): number;
 declare function g(e: E): number;
+// Repro from #12668
 interface Square {
     kind: "square";
     size: number;
@@= skipped -26, +28 lines =@@
 type Shape = Square | Rectangle | Circle | Triangle;
 declare function area(s: Shape): number;
 declare function areaWrapped(s: Shape): number;
+// Repro from #13241
 declare enum MyEnum {
     A = 0,
     B = 1
@@= skipped -7, +8 lines =@@
 declare function thisGivesError(e: MyEnum): string;
 declare function good1(e: MyEnum): string;
 declare function good2(e: MyEnum): string;
+// Repro from #18362
 declare enum Level {
     One = 0,
     Two = 1
 }
 declare const doSomethingWithLevel: (level: Level) => Level;
+// Repro from #20409
 interface Square2 {
     kind: "square";
     size: number;
@@= skipped -16, +18 lines =@@
 type Shape2 = Square2 | Circle2;
 declare function withDefault(s1: Shape2, s2: Shape2): string;
 declare function withoutDefault(s1: Shape2, s2: Shape2): string;
+// Repro from #20823
 declare function test4(value: 1 | 2): string;
+// Repro from #34661
 declare enum Animal {
     DOG = 0,
     CAT = 1
@@= skipped -9, +11 lines =@@
     animal: Animal;
 } | undefined;
 declare function expression(): Animal;
+// Repro from #34840
 declare function foo(): void;
+// Repro from #35070
 type O = {
     a: number;
     b: number;
 };
 type K = keyof O | 'c';
 declare function ff(o: O, k: K): number;
+// Repro from #35431
 type A = {
     kind: "abc";
 } | {