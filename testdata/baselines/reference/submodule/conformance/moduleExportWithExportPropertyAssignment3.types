//// [tests/cases/conformance/salsa/moduleExportWithExportPropertyAssignment3.ts] ////

=== a.js ===
/// <reference path='./requires.d.ts' />
var mod1 = require('./mod1')
>mod1 : { justExport: number; bothBefore: number; bothAfter: number; }
>require('./mod1') : { justExport: number; bothBefore: number; bothAfter: number; }
>require : (name: string) => any
>'./mod1' : "./mod1"

mod1.justExport.toFixed()
>mod1.justExport.toFixed() : string
>mod1.justExport.toFixed : (fractionDigits?: number) => string
>mod1.justExport : number
>mod1 : { justExport: number; bothBefore: number; bothAfter: number; }
>justExport : number
>toFixed : (fractionDigits?: number) => string

mod1.bothBefore.toFixed() // error, 'toFixed' not on 'string | number'
>mod1.bothBefore.toFixed() : string
>mod1.bothBefore.toFixed : (fractionDigits?: number) => string
>mod1.bothBefore : number
>mod1 : { justExport: number; bothBefore: number; bothAfter: number; }
>bothBefore : number
>toFixed : (fractionDigits?: number) => string

mod1.bothAfter.toFixed() // error, 'toFixed' not on 'string | number'
>mod1.bothAfter.toFixed() : string
>mod1.bothAfter.toFixed : (fractionDigits?: number) => string
>mod1.bothAfter : number
>mod1 : { justExport: number; bothBefore: number; bothAfter: number; }
>bothAfter : number
>toFixed : (fractionDigits?: number) => string

mod1.justProperty.length
>mod1.justProperty.length : any
>mod1.justProperty : any
>mod1 : { justExport: number; bothBefore: number; bothAfter: number; }
>justProperty : any
>length : any

=== requires.d.ts ===
declare var module: { exports: any };
>module : { exports: any; }
>exports : any

declare function require(name: string): any;
>require : (name: string) => any
>name : string

=== mod1.js ===
/// <reference path='./requires.d.ts' />
module.exports.bothBefore = 'string'
>module.exports.bothBefore = 'string' : "string"
>module.exports.bothBefore : number
>module.exports : { justExport: number; bothBefore: number; bothAfter: number; }
>module : { "export=": { justExport: number; bothBefore: number; bothAfter: number; }; }
>exports : { justExport: number; bothBefore: number; bothAfter: number; }
>bothBefore : number
>'string' : "string"

module.exports = {
>module.exports = {    justExport: 1,    bothBefore: 2,    bothAfter: 3,} : { justExport: number; bothBefore: number; bothAfter: number; }
>module.exports : { justExport: number; bothBefore: number; bothAfter: number; }
>module : { "export=": { justExport: number; bothBefore: number; bothAfter: number; }; }
>exports : { justExport: number; bothBefore: number; bothAfter: number; }
>{    justExport: 1,    bothBefore: 2,    bothAfter: 3,} : { justExport: number; bothBefore: number; bothAfter: number; }

    justExport: 1,
>justExport : number
>1 : 1

    bothBefore: 2,
>bothBefore : number
>2 : 2

    bothAfter: 3,
>bothAfter : number
>3 : 3
}
module.exports.bothAfter = 'string'
>module.exports.bothAfter = 'string' : "string"
>module.exports.bothAfter : number
>module.exports : { justExport: number; bothBefore: number; bothAfter: number; }
>module : { "export=": { justExport: number; bothBefore: number; bothAfter: number; }; }
>exports : { justExport: number; bothBefore: number; bothAfter: number; }
>bothAfter : number
>'string' : "string"

module.exports.justProperty = 'string'
>module.exports.justProperty = 'string' : "string"
>module.exports.justProperty : any
>module.exports : { justExport: number; bothBefore: number; bothAfter: number; }
>module : { "export=": { justExport: number; bothBefore: number; bothAfter: number; }; }
>exports : { justExport: number; bothBefore: number; bothAfter: number; }
>justProperty : any
>'string' : "string"

