//// [tests/cases/conformance/salsa/moduleExportWithExportPropertyAssignment.ts] ////

=== a.js ===
/// <reference path='./requires.d.ts' />
var mod1 = require('./mod1')
>mod1 : Symbol(mod1, Decl(a.js, 1, 3))
>require : Symbol(require, Decl(requires.d.ts, 0, 37))
>'./mod1' : Symbol("mod1", Decl(mod1.js, 0, 0))

mod1()
>mod1 : Symbol(mod1, Decl(a.js, 1, 3))

mod1.f() // error, not enough arguments
>mod1 : Symbol(mod1, Decl(a.js, 1, 3))

=== requires.d.ts ===
declare var module: { exports: any };
>module : Symbol(module, Decl(requires.d.ts, 0, 11))
>exports : Symbol(exports, Decl(requires.d.ts, 0, 21))

declare function require(name: string): any;
>require : Symbol(require, Decl(requires.d.ts, 0, 37))
>name : Symbol(name, Decl(requires.d.ts, 1, 25))

=== mod1.js ===
/// <reference path='./requires.d.ts' />
module.exports = function () { }
>module.exports : Symbol(export=, Decl(mod1.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol(export=, Decl(mod1.js, 0, 0))

/** @param {number} a */
module.exports.f = function (a) { }
>module.exports : Symbol(export=, Decl(mod1.js, 0, 0))
>module : Symbol(module.exports)
>exports : Symbol(export=, Decl(mod1.js, 0, 0))
>a : Symbol(a, Decl(mod1.js, 3, 29))

