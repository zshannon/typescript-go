--- old.nodeModulesDeclarationEmitWithPackageExports(module=node16).js
+++ new.nodeModulesDeclarationEmitWithPackageExports(module=node16).js
@@= skipped -90, +90 lines =@@
     }
 }

+//// [index.js]
+// esm format file
+import * as cjs from "package/cjs";
+import * as mjs from "package/mjs";
+import * as type from "package";
+export const a = cjs;
+export const b = mjs;
+export const c = type;
+import * as cjsi from "inner/cjs";
+import * as mjsi from "inner/mjs";
+import * as typei from "inner";
+export const d = cjsi;
+export const e = mjsi;
+export const f = typei;
 //// [index.mjs]
 // esm format file
 import * as cjs from "package/cjs";
@@= skipped -64, +78 lines =@@
 exports.d = cjsi;
 exports.e = mjsi;
 exports.f = typei;
-//// [index.js]
-// esm format file
-import * as cjs from "package/cjs";
-import * as mjs from "package/mjs";
-import * as type from "package";
-export const a = cjs;
-export const b = mjs;
-export const c = type;
+
+
+//// [index.d.ts]
+export declare const a: any;
+export declare const b: any;
+export declare const c: any;
 import * as cjsi from "inner/cjs";
 import * as mjsi from "inner/mjs";
 import * as typei from "inner";
-export const d = cjsi;
-export const e = mjsi;
-export const f = typei;
-
-
+export declare const d: typeof cjsi;
+export declare const e: typeof mjsi;
+export declare const f: typeof typei;
 //// [index.d.mts]
-import * as cjs from "package/cjs";
-import * as mjs from "package/mjs";
-import * as type from "package";
-export declare const a: typeof cjs;
-export declare const b: typeof mjs;
-export declare const c: typeof type;
+export declare const a: any;
+export declare const b: any;
+export declare const c: any;
 import * as cjsi from "inner/cjs";
 import * as mjsi from "inner/mjs";
 import * as typei from "inner";
@@= skipped -30, +23 lines =@@
 export declare const e: typeof mjsi;
 export declare const f: typeof typei;
 //// [index.d.cts]
-import * as cjs from "package/cjs";
-import * as mjs from "package/mjs";
-import * as type from "package";
-export declare const a: typeof cjs;
-export declare const b: typeof mjs;
-export declare const c: typeof type;
-import * as cjsi from "inner/cjs";
-import * as mjsi from "inner/mjs";
-import * as typei from "inner";
-export declare const d: typeof cjsi;
-export declare const e: typeof mjsi;
-export declare const f: typeof typei;
-//// [index.d.ts]
-import * as cjs from "package/cjs";
-import * as mjs from "package/mjs";
-import * as type from "package";
-export declare const a: typeof cjs;
-export declare const b: typeof mjs;
-export declare const c: typeof type;
+export declare const a: any;
+export declare const b: any;
+export declare const c: any;
 import * as cjsi from "inner/cjs";
 import * as mjsi from "inner/mjs";
 import * as typei from "inner";