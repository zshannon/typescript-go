//// [tests/cases/conformance/jsdoc/typedefCrossModule2.ts] ////

=== use.js ===
var mod = require('./mod1.js');
>mod : Symbol(mod, Decl(use.js, 0, 3))
>require : Symbol(require)
>'./mod1.js' : Symbol("mod1", Decl(mod1.js, 0, 0))

/** @type {import("./mod1.js").Baz} */
var b;
>b : Symbol(b, Decl(use.js, 2, 3))

/** @type {mod.Baz} */
var bb;
>bb : Symbol(bb, Decl(use.js, 4, 3))

var bbb = new mod.Baz();
>bbb : Symbol(bbb, Decl(use.js, 5, 3))
>mod.Baz : Symbol(Baz, Decl(mod1.js, 9, 18))
>mod : Symbol(mod, Decl(use.js, 0, 3))
>Baz : Symbol(Baz, Decl(mod1.js, 9, 18))

=== mod1.js ===
// error

/** @typedef {number} Foo */
class Foo { } // should error
>Foo : Symbol(Foo, Decl(mod1.js, 2, 4), Decl(mod1.js, 0, 0))

/** @typedef {number} Bar */
exports.Bar = class { }
>exports : Symbol("mod1", Decl(mod1.js, 0, 0))

/** @typedef {number} Baz */
module.exports = {
>module.exports : Symbol(export=, Decl(mod1.js, 6, 23))
>module : Symbol(module.exports)
>exports : Symbol(export=, Decl(mod1.js, 6, 23))

    Baz: class { }
>Baz : Symbol(Baz, Decl(mod1.js, 9, 18))
}

// ok

/** @typedef {number} Qux */
var Qux = 2;
>Qux : Symbol(Qux, Decl(mod1.js, 15, 4), Decl(mod1.js, 16, 3))

/** @typedef {number} Quid */
exports.Quid = 2;
>exports : Symbol("mod1", Decl(mod1.js, 0, 0))

/** @typedef {number} Quack */
module.exports = {
>module.exports : Symbol(export=, Decl(mod1.js, 6, 23))
>module : Symbol(module.exports)
>exports : Symbol(export=, Decl(mod1.js, 6, 23))

    Quack: 2
>Quack : Symbol(Quack, Decl(mod1.js, 22, 18))
}

