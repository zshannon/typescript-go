--- old.jsDeclarationsClassExtendsVisibility.symbols
+++ new.jsDeclarationsClassExtendsVisibility.symbols
@@= skipped -20, +20 lines =@@
 >Bar : Symbol(Bar, Decl(cls.js, 0, 5))

 module.exports = Foo;
->module.exports : Symbol(module.exports, Decl(cls.js, 0, 0))
->module : Symbol(export=, Decl(cls.js, 5, 24))
->exports : Symbol(export=, Decl(cls.js, 5, 24))
+>module.exports : Symbol(Foo, Decl(cls.js, 4, 2))
+>module : Symbol(module.exports)
+>exports : Symbol(Foo, Decl(cls.js, 4, 2))
 >Foo : Symbol(Foo, Decl(cls.js, 4, 2))

 module.exports.Strings = Strings;
->module.exports.Strings : Symbol(Strings, Decl(cls.js, 6, 21))
->module.exports : Symbol(Strings, Decl(cls.js, 6, 21))
->module : Symbol(module, Decl(cls.js, 5, 24))
->exports : Symbol(module.exports, Decl(cls.js, 0, 0))
->Strings : Symbol(Strings, Decl(cls.js, 6, 21))
+>module.exports : Symbol(Foo, Decl(cls.js, 4, 2))
+>module : Symbol(module.exports)
+>exports : Symbol(Foo, Decl(cls.js, 4, 2))
 >Strings : Symbol(Strings, Decl(cls.js, 1, 5))

 === bar.js ===
@@= skipped -18, +16 lines =@@
 >Bar : Symbol(Bar, Decl(bar.js, 0, 0))

 module.exports = Bar;
->module.exports : Symbol(module.exports, Decl(bar.js, 0, 0))
->module : Symbol(export=, Decl(bar.js, 0, 12))
->exports : Symbol(export=, Decl(bar.js, 0, 12))
+>module.exports : Symbol(Bar, Decl(bar.js, 0, 0))
+>module : Symbol(module.exports)
+>exports : Symbol(Bar, Decl(bar.js, 0, 0))
 >Bar : Symbol(Bar, Decl(bar.js, 0, 0))
