--- old.nodeModulesDeclarationEmitWithPackageExports(module=node18).types
+++ new.nodeModulesDeclarationEmitWithPackageExports(module=node18).types
@@= skipped -2, +2 lines =@@
 === index.ts ===
 // esm format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 export const a = cjs;
->a : typeof cjs
->cjs : typeof cjs
+>a : any
+>cjs : any

 export const b = mjs;
->b : typeof mjs
->mjs : typeof mjs
+>b : any
+>mjs : any

 export const c = type;
->c : typeof type
->type : typeof type
+>c : any
+>type : any

 import * as cjsi from "inner/cjs";
 >cjsi : typeof cjsi
@@= skipped -44, +44 lines =@@
 === index.mts ===
 // esm format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 export const a = cjs;
->a : typeof cjs
->cjs : typeof cjs
+>a : any
+>cjs : any

 export const b = mjs;
->b : typeof mjs
->mjs : typeof mjs
+>b : any
+>mjs : any

 export const c = type;
->c : typeof type
->type : typeof type
+>c : any
+>type : any

 import * as cjsi from "inner/cjs";
 >cjsi : typeof cjsi
@@= skipped -44, +44 lines =@@
 === index.cts ===
 // cjs format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 export const a = cjs;
->a : typeof cjs
->cjs : typeof cjs
+>a : any
+>cjs : any

 export const b = mjs;
->b : typeof mjs
->mjs : typeof mjs
+>b : any
+>mjs : any

 export const c = type;
->c : typeof type
->type : typeof type
+>c : any
+>type : any

 import * as cjsi from "inner/cjs";
 >cjsi : typeof cjsi