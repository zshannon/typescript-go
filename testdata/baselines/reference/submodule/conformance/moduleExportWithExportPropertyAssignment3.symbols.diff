--- old.moduleExportWithExportPropertyAssignment3.symbols
+++ new.moduleExportWithExportPropertyAssignment3.symbols
@@= skipped -7, +7 lines =@@
 >'./mod1' : Symbol("mod1", Decl(mod1.js, 0, 0))

 mod1.justExport.toFixed()
->mod1.justExport.toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>mod1.justExport.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
 >mod1.justExport : Symbol(justExport, Decl(mod1.js, 2, 18))
 >mod1 : Symbol(mod1, Decl(a.js, 1, 3))
 >justExport : Symbol(justExport, Decl(mod1.js, 2, 18))
->toFixed : Symbol(Number.toFixed, Decl(lib.es5.d.ts, --, --))
+>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))

 mod1.bothBefore.toFixed() // error, 'toFixed' not on 'string | number'
->mod1.bothBefore : Symbol(bothBefore, Decl(mod1.js, 3, 18), Decl(mod1.js, 0, 0))
+>mod1.bothBefore.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
+>mod1.bothBefore : Symbol(bothBefore, Decl(mod1.js, 3, 18))
 >mod1 : Symbol(mod1, Decl(a.js, 1, 3))
->bothBefore : Symbol(bothBefore, Decl(mod1.js, 3, 18), Decl(mod1.js, 0, 0))
+>bothBefore : Symbol(bothBefore, Decl(mod1.js, 3, 18))
+>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))

 mod1.bothAfter.toFixed() // error, 'toFixed' not on 'string | number'
->mod1.bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18), Decl(mod1.js, 6, 1))
+>mod1.bothAfter.toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))
+>mod1.bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18))
 >mod1 : Symbol(mod1, Decl(a.js, 1, 3))
->bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18), Decl(mod1.js, 6, 1))
+>bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18))
+>toFixed : Symbol(toFixed, Decl(lib.es5.d.ts, --, --))

 mod1.justProperty.length
->mod1.justProperty.length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))
->mod1.justProperty : Symbol(mod1.justProperty, Decl(mod1.js, 7, 35))
 >mod1 : Symbol(mod1, Decl(a.js, 1, 3))
->justProperty : Symbol(mod1.justProperty, Decl(mod1.js, 7, 35))
->length : Symbol(String.length, Decl(lib.es5.d.ts, --, --))

 === requires.d.ts ===
 declare var module: { exports: any };
@@= skipped -35, +35 lines =@@
 === mod1.js ===
 /// <reference path='./requires.d.ts' />
 module.exports.bothBefore = 'string'
->module.exports.bothBefore : Symbol(bothBefore, Decl(mod1.js, 3, 18), Decl(mod1.js, 0, 0))
->module.exports : Symbol(bothBefore, Decl(mod1.js, 0, 0))
->module : Symbol(module, Decl(mod1.js, 0, 0))
->exports : Symbol(module.exports, Decl(mod1.js, 0, 0))
->bothBefore : Symbol(bothBefore, Decl(mod1.js, 0, 0))
+>module.exports.bothBefore : Symbol(bothBefore, Decl(mod1.js, 3, 18))
+>module.exports : Symbol(export=, Decl(mod1.js, 1, 36))
+>module : Symbol(module.exports)
+>exports : Symbol(export=, Decl(mod1.js, 1, 36))
+>bothBefore : Symbol(bothBefore, Decl(mod1.js, 3, 18))

 module.exports = {
->module.exports : Symbol(module.exports, Decl(mod1.js, 0, 0))
->module : Symbol(export=, Decl(mod1.js, 1, 36))
+>module.exports : Symbol(export=, Decl(mod1.js, 1, 36))
+>module : Symbol(module.exports)
 >exports : Symbol(export=, Decl(mod1.js, 1, 36))

     justExport: 1,
@@= skipped -21, +21 lines =@@
 >bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18))
 }
 module.exports.bothAfter = 'string'
->module.exports.bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18), Decl(mod1.js, 6, 1))
->module.exports : Symbol(bothAfter, Decl(mod1.js, 6, 1))
->module : Symbol(module, Decl(mod1.js, 0, 0))
->exports : Symbol(module.exports, Decl(mod1.js, 0, 0))
->bothAfter : Symbol(bothAfter, Decl(mod1.js, 6, 1))
+>module.exports.bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18))
+>module.exports : Symbol(export=, Decl(mod1.js, 1, 36))
+>module : Symbol(module.exports)
+>exports : Symbol(export=, Decl(mod1.js, 1, 36))
+>bothAfter : Symbol(bothAfter, Decl(mod1.js, 4, 18))

 module.exports.justProperty = 'string'
->module.exports.justProperty : Symbol(justProperty, Decl(mod1.js, 7, 35))
->module.exports : Symbol(justProperty, Decl(mod1.js, 7, 35))
->module : Symbol(module, Decl(mod1.js, 0, 0))
->exports : Symbol(module.exports, Decl(mod1.js, 0, 0))
->justProperty : Symbol(justProperty, Decl(mod1.js, 7, 35))
+>module.exports : Symbol(export=, Decl(mod1.js, 1, 36))
+>module : Symbol(module.exports)
+>exports : Symbol(export=, Decl(mod1.js, 1, 36))
