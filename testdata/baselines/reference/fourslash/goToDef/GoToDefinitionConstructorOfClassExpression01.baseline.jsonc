// === goToDefinition ===
// === /goToDefinitionConstructorOfClassExpression01.ts ===

// var x = class C {
//     [|constructor() {
//         var other = new /*GO TO DEFINITION*/C;
//     }|]
// }
// 
// var y = class C extends x {
// // --- (line: 8) skipped ---




// === goToDefinition ===
// === /goToDefinitionConstructorOfClassExpression01.ts ===

// --- (line: 4) skipped ---
// }
// 
// var y = class C extends x {
//     [|constructor() {
//         super();
//         var other = new /*GO TO DEFINITION*/C;
//     }|]
// }
// var z = class C extends x {
//     m() {
// // --- (line: 15) skipped ---




// === goToDefinition ===
// === /goToDefinitionConstructorOfClassExpression01.ts ===

// var x = class C {
//     [|constructor() {
//         var other = new C;
//     }|]
// }
// 
// var y = class C extends x {
// // --- (line: 8) skipped ---


// --- (line: 11) skipped ---
// }
// var z = class C extends x {
//     m() {
//         return new /*GO TO DEFINITION*/C;
//     }
// }
// 
// // --- (line: 19) skipped ---




// === goToDefinition ===
// === /goToDefinitionConstructorOfClassExpression01.ts ===

// --- (line: 15) skipped ---
//     }
// }
// 
// var x1 = new /*GO TO DEFINITION*/C();
// var x2 = new x();
// var y1 = new y();
// var z1 = new z();




// === goToDefinition ===
// === /goToDefinitionConstructorOfClassExpression01.ts ===

// var x = class C {
//     [|constructor() {
//         var other = new C;
//     }|]
// }
// 
// var y = class C extends x {
// // --- (line: 8) skipped ---


// --- (line: 16) skipped ---
// }
// 
// var x1 = new C();
// var x2 = new /*GO TO DEFINITION*/x();
// var y1 = new y();
// var z1 = new z();




// === goToDefinition ===
// === /goToDefinitionConstructorOfClassExpression01.ts ===

// --- (line: 4) skipped ---
// }
// 
// var y = class C extends x {
//     [|constructor() {
//         super();
//         var other = new C;
//     }|]
// }
// var z = class C extends x {
//     m() {
//         return new C;
//     }
// }
// 
// var x1 = new C();
// var x2 = new x();
// var y1 = new /*GO TO DEFINITION*/y();
// var z1 = new z();




// === goToDefinition ===
// === /goToDefinitionConstructorOfClassExpression01.ts ===

// var x = class C {
//     [|constructor() {
//         var other = new C;
//     }|]
// }
// 
// var y = class C extends x {
// // --- (line: 8) skipped ---


// --- (line: 18) skipped ---
// var x1 = new C();
// var x2 = new x();
// var y1 = new y();
// var z1 = new /*GO TO DEFINITION*/z();
