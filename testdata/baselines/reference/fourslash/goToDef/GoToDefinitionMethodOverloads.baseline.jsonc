// === goToDefinition ===
// === /goToDefinitionMethodOverloads.ts ===

// class MethodOverload {
//     static [|method|]();
//     static method(foo: string);
//     static method(foo?: any) { }
//     public method(): any;
//     public method(foo: string);
//     public method(foo?: any) { return "foo" }
// }
// // static method
// MethodOverload./*GO TO DEFINITION*/method();
// MethodOverload.method("123");
// // instance method
// var methodOverload = new MethodOverload();
// methodOverload.method();
// methodOverload.method("456");




// === goToDefinition ===
// === /goToDefinitionMethodOverloads.ts ===

// class MethodOverload {
//     static method();
//     static [|method|](foo: string);
//     static method(foo?: any) { }
//     public method(): any;
//     public method(foo: string);
//     public method(foo?: any) { return "foo" }
// }
// // static method
// MethodOverload.method();
// MethodOverload./*GO TO DEFINITION*/method("123");
// // instance method
// var methodOverload = new MethodOverload();
// methodOverload.method();
// methodOverload.method("456");




// === goToDefinition ===
// === /goToDefinitionMethodOverloads.ts ===

// class MethodOverload {
//     static method();
//     static method(foo: string);
//     static method(foo?: any) { }
//     public [|method|](): any;
//     public method(foo: string);
//     public method(foo?: any) { return "foo" }
// }
// // static method
// MethodOverload.method();
// MethodOverload.method("123");
// // instance method
// var methodOverload = new MethodOverload();
// methodOverload./*GO TO DEFINITION*/method();
// methodOverload.method("456");




// === goToDefinition ===
// === /goToDefinitionMethodOverloads.ts ===

// class MethodOverload {
//     static method();
//     static method(foo: string);
//     static method(foo?: any) { }
//     public method(): any;
//     public [|method|](foo: string);
//     public method(foo?: any) { return "foo" }
// }
// // static method
// MethodOverload.method();
// MethodOverload.method("123");
// // instance method
// var methodOverload = new MethodOverload();
// methodOverload.method();
// methodOverload./*GO TO DEFINITION*/method("456");




// === goToDefinition ===
// === /goToDefinitionMethodOverloads.ts ===

// class MethodOverload {
//     static /*GO TO DEFINITION*/method();
//     static method(foo: string);
//     static [|method|](foo?: any) { }
//     public method(): any;
//     public method(foo: string);
//     public method(foo?: any) { return "foo" }
// // --- (line: 8) skipped ---




// === goToDefinition ===
// === /goToDefinitionMethodOverloads.ts ===

// class MethodOverload {
//     static method();
//     static method(foo: string);
//     static method(foo?: any) { }
//     public /*GO TO DEFINITION*/method(): any;
//     public method(foo: string);
//     public [|method|](foo?: any) { return "foo" }
// }
// // static method
// MethodOverload.method();
// // --- (line: 11) skipped ---
