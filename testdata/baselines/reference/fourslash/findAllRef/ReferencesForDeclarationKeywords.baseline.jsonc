// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// /*FIND ALL REFS*/class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// // --- (line: 7) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// class C1 /*FIND ALL REFS*/extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// // --- (line: 7) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// class C1 extends Base /*FIND ALL REFS*/implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// // --- (line: 7) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 14) skipped ---
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 /*FIND ALL REFS*/implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     /*FIND ALL REFS*/get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// // --- (line: 8) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     /*FIND ALL REFS*/set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// // --- (line: 9) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 3) skipped ---
//     get e() { return 1; }
//     set e(v) {}
// }
// /*FIND ALL REFS*/interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// // --- (line: 11) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 3) skipped ---
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 /*FIND ALL REFS*/extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// // --- (line: 11) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 15) skipped ---
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 /*FIND ALL REFS*/extends Implemented2, Implemented3 {}




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 4) skipped ---
//     set e(v) {}
// }
// interface I1 extends Base { }
// /*FIND ALL REFS*/type T = { }
// enum E { }
// namespace N { }
// module M { }
// // --- (line: 12) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 5) skipped ---
// }
// interface I1 extends Base { }
// type T = { }
// /*FIND ALL REFS*/enum E { }
// namespace N { }
// module M { }
// function fn() {}
// // --- (line: 13) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 6) skipped ---
// interface I1 extends Base { }
// type T = { }
// enum E { }
// /*FIND ALL REFS*/namespace N { }
// module M { }
// function fn() {}
// var x;
// // --- (line: 14) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 7) skipped ---
// type T = { }
// enum E { }
// namespace N { }
// /*FIND ALL REFS*/module M { }
// function fn() {}
// var x;
// let y;
// // --- (line: 15) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 8) skipped ---
// enum E { }
// namespace N { }
// module M { }
// /*FIND ALL REFS*/function fn() {}
// var x;
// let y;
// const z = 1;
// // --- (line: 16) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 9) skipped ---
// namespace N { }
// module M { }
// function fn() {}
// /*FIND ALL REFS*/var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// // --- (line: 17) skipped ---




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 10) skipped ---
// module M { }
// function fn() {}
// var x;
// /*FIND ALL REFS*/let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}




// === findAllReferences ===
// === /referencesForDeclarationKeywords.ts ===

// --- (line: 11) skipped ---
// function fn() {}
// var x;
// let y;
// /*FIND ALL REFS*/const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}
