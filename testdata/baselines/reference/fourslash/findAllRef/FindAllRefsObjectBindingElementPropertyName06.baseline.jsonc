// === findAllReferences ===
// === /findAllRefsObjectBindingElementPropertyName06.ts ===

// interface I {
//     /*FIND ALL REFS*/[|property1|]: number;
//     property2: string;
// }
// 
// var elems: I[];
// for (let { [|property1|]: p } of elems) {
// }
// for (let { [|property1|] } of elems) {
// }
// for (var { [|property1|]: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }




// === findAllReferences ===
// === /findAllRefsObjectBindingElementPropertyName06.ts ===

// interface I {
//     [|property1|]: number;
//     property2: string;
// }
// 
// var elems: I[];
// for (let { /*FIND ALL REFS*/[|property1|]: p } of elems) {
// }
// for (let { [|property1|] } of elems) {
// }
// for (var { [|property1|]: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }




// === findAllReferences ===
// === /findAllRefsObjectBindingElementPropertyName06.ts ===

// interface I {
//     [|property1|]: number;
//     property2: string;
// }
// 
// var elems: I[];
// for (let { [|property1|]: p } of elems) {
// }
// for (let { [|property1|] } of elems) {
// }
// for (var { /*FIND ALL REFS*/[|property1|]: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }




// === findAllReferences ===
// === /findAllRefsObjectBindingElementPropertyName06.ts ===

// --- (line: 10) skipped ---
// for (var { property1: p1 } of elems) {
// }
// var p2;
// for ({ /*FIND ALL REFS*/[|property1|] : p2 } of elems) {
// }




// === findAllReferences ===
// === /findAllRefsObjectBindingElementPropertyName06.ts ===

// interface I {
//     [|property1|]: number;
//     property2: string;
// }
// 
// var elems: I[];
// for (let { [|property1|]: p } of elems) {
// }
// for (let { /*FIND ALL REFS*/[|property1|] } of elems) {
// }
// for (var { [|property1|]: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }
