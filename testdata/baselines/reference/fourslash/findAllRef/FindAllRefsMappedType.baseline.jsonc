// === findAllReferences ===
// === /findAllRefsMappedType.ts ===

// interface T { /*FIND ALL REFS*/[|a|]: number; }
// type U = { readonly [K in keyof T]?: string };
// declare const t: T;
// t.[|a|];
// declare const u: U;
// u.[|a|];




// === findAllReferences ===
// === /findAllRefsMappedType.ts ===

// interface T { [|a|]: number; }
// type U = { readonly [K in keyof T]?: string };
// declare const t: T;
// t./*FIND ALL REFS*/[|a|];
// declare const u: U;
// u.[|a|];




// === findAllReferences ===
// === /findAllRefsMappedType.ts ===

// interface T { [|a|]: number; }
// type U = { readonly [K in keyof T]?: string };
// declare const t: T;
// t.[|a|];
// declare const u: U;
// u./*FIND ALL REFS*/[|a|];
