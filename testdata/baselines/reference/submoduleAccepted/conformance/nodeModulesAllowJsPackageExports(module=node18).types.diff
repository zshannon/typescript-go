--- old.nodeModulesAllowJsPackageExports(module=node18).types
+++ new.nodeModulesAllowJsPackageExports(module=node18).types
@@= skipped -2, +2 lines =@@
 === index.js ===
 // esm format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 cjs;
->cjs : typeof cjs
+>cjs : any

 mjs;
->mjs : typeof mjs
+>mjs : any

 type;
->type : typeof type
+>type : any

 import * as cjsi from "inner/cjs";
 >cjsi : typeof cjsi

 import * as mjsi from "inner/mjs";
->mjsi : typeof cjsi.cjs.mjs
+>mjsi : typeof mjsi

 import * as typei from "inner";
 >typei : typeof typei
@@= skipped -30, +30 lines =@@
 >cjsi : typeof cjsi

 mjsi;
->mjsi : typeof cjsi.cjs.mjs
+>mjsi : typeof mjsi

 typei;
 >typei : typeof typei
@@= skipped -8, +8 lines =@@
 === index.mjs ===
 // esm format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 cjs;
->cjs : typeof cjs
+>cjs : any

 mjs;
->mjs : typeof mjs
+>mjs : any

 type;
->type : typeof type
+>type : any

 import * as cjsi from "inner/cjs";
 >cjsi : typeof cjsi

 import * as mjsi from "inner/mjs";
->mjsi : typeof cjsi.cjs.mjs
+>mjsi : typeof mjsi

 import * as typei from "inner";
 >typei : typeof typei
@@= skipped -30, +30 lines =@@
 >cjsi : typeof cjsi

 mjsi;
->mjsi : typeof cjsi.cjs.mjs
+>mjsi : typeof mjsi

 typei;
 >typei : typeof typei
@@= skipped -8, +8 lines =@@
 === index.cjs ===
 // cjs format file
 import * as cjs from "package/cjs";
->cjs : typeof cjs
+>cjs : any

 import * as mjs from "package/mjs";
->mjs : typeof mjs
+>mjs : any

 import * as type from "package";
->type : typeof type
+>type : any

 cjs;
->cjs : typeof cjs
+>cjs : any

 mjs;
->mjs : typeof mjs
+>mjs : any

 type;
->type : typeof type
+>type : any

 import * as cjsi from "inner/cjs";
 >cjsi : typeof cjsi

 import * as mjsi from "inner/mjs";
->mjsi : typeof cjsi.mjs
+>mjsi : typeof mjsi

 import * as typei from "inner";
->typei : typeof cjsi.mjs.cjs.type
+>typei : typeof typei

 cjsi;
 >cjsi : typeof cjsi

 mjsi;
->mjsi : typeof cjsi.mjs
+>mjsi : typeof mjsi

 typei;
->typei : typeof cjsi.mjs.cjs.type
+>typei : typeof typei

 === node_modules/inner/index.d.ts ===
 // cjs format file
 import * as cjs from "inner/cjs";
->cjs : any
+>cjs : typeof cjs

 import * as mjs from "inner/mjs";
 >mjs : typeof mjs

 import * as type from "inner";
->type : typeof mjs.cjs.cjs.type
+>type : typeof type

 export { cjs };
->cjs : any
+>cjs : typeof cjs

 export { mjs };
 >mjs : typeof mjs

 export { type };
->type : typeof mjs.cjs.cjs.type
+>type : typeof type

 === node_modules/inner/index.d.mts ===
 // esm format file
@@= skipped -61, +61 lines =@@
 >cjs : typeof cjs

 import * as mjs from "inner/mjs";
->mjs : typeof cjs.cjs.mjs
+>mjs : typeof mjs

 import * as type from "inner";
->type : typeof cjs.cjs.mjs.type
+>type : typeof type

 export { cjs };
 >cjs : typeof cjs

 export { mjs };
->mjs : typeof cjs.cjs.mjs
+>mjs : typeof mjs

 export { type };
->type : typeof cjs.cjs.mjs.type
+>type : typeof type

 === node_modules/inner/index.d.cts ===
 // cjs format file
@@= skipped -20, +20 lines =@@
 >cjs : typeof cjs

 import * as mjs from "inner/mjs";
->mjs : typeof cjs.mjs
+>mjs : typeof mjs

 import * as type from "inner";
->type : typeof cjs.mjs.cjs.type
+>type : typeof type

 export { cjs };
 >cjs : typeof cjs

 export { mjs };
->mjs : typeof cjs.mjs
+>mjs : typeof mjs

 export { type };
->type : typeof cjs.mjs.cjs.type
+>type : typeof type
