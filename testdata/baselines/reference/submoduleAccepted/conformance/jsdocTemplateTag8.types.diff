--- old.jsdocTemplateTag8.types
+++ new.jsdocTemplateTag8.types
@@= skipped -45, +45 lines =@@
  */
 let super_contravariant = { f: (x) => {} };
 >super_contravariant : Contravariant<unknown>
->{ f: (x) => {} } : { f: (x: unknown) => void; }
->f : (x: unknown) => void
->(x) => {} : (x: unknown) => void
->x : unknown
+>{ f: (x) => {} } : { f: (x: T) => void; }
+>f : (x: T) => void
+>(x) => {} : (x: T) => void
+>x : T

 /**
  * @type {Contravariant<string>}
  */
 let sub_contravariant = { f: (x) => {} };
 >sub_contravariant : Contravariant<string>
->{ f: (x) => {} } : { f: (x: string) => void; }
->f : (x: string) => void
->(x) => {} : (x: string) => void
->x : string
+>{ f: (x) => {} } : { f: (x: T) => void; }
+>f : (x: T) => void
+>(x) => {} : (x: T) => void
+>x : T

 super_contravariant = sub_contravariant;  // Error
 >super_contravariant = sub_contravariant : Contravariant<string>
@@= skipped -36, +36 lines =@@
  */
 let super_invariant = { f: (x) => {} };
 >super_invariant : Invariant<unknown>
->{ f: (x) => {} } : { f: (x: unknown) => void; }
->f : (x: unknown) => void
->(x) => {} : (x: unknown) => void
->x : unknown
+>{ f: (x) => {} } : { f: (x: T) => void; }
+>f : (x: T) => void
+>(x) => {} : (x: T) => void
+>x : T

 /**
  * @type {Invariant<string>}
  */
 let sub_invariant = { f: (x) => { return "" } };
 >sub_invariant : Invariant<string>
->{ f: (x) => { return "" } } : { f: (x: string) => string; }
->f : (x: string) => string
->(x) => { return "" } : (x: string) => string
->x : string
+>{ f: (x) => { return "" } } : { f: (x: T) => string; }
+>f : (x: T) => string
+>(x) => { return "" } : (x: T) => string
+>x : T
 >"" : ""

 super_invariant = sub_invariant;  // Error