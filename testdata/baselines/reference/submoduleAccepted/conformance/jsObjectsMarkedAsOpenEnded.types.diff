--- old.jsObjectsMarkedAsOpenEnded.types
+++ new.jsObjectsMarkedAsOpenEnded.types
@@= skipped -1, +1 lines =@@

 === a.js ===
 var variable = {};
->variable : typeof variable
->{} : {}
+>variable : { a: number; }
+>{} : { a: number; }

 variable.a = 0;
 >variable.a = 0 : 0
 >variable.a : number
->variable : typeof variable
+>variable : { a: number; }
 >a : number
 >0 : 0

@@= skipped -19, +19 lines =@@

     constructor() {
         this.member = {};
->this.member = {} : {}
+>this.member = {} : { a: number; }
 >this.member : any
 >this : this
 >member : any
->{} : {}
+>{} : { a: number; }

         this.member.a = 0;
 >this.member.a = 0 : 0
->this.member.a : error
->this.member : {}
+>this.member.a : number
+>this.member : { a: number; }
 >this : this
->member : {}
->a : any
+>member : { a: number; }
+>a : number
 >0 : 0
     }
 }
@@= skipped -29, +29 lines =@@

 obj.property.a = 0;
 >obj.property.a = 0 : 0
->obj.property.a : error
+>obj.property.a : any
 >obj.property : {}
 >obj : { property: {}; }
 >property : {}
@@= skipped -24, +24 lines =@@
 variable.a = 1;
 >variable.a = 1 : 1
 >variable.a : number
->variable : typeof variable
+>variable : { a: number; }
 >a : number
 >1 : 1

 (new C()).member.a = 1;
 >(new C()).member.a = 1 : 1
->(new C()).member.a : any
->(new C()).member : {}
+>(new C()).member.a : number
+>(new C()).member : { a: number; }
 >(new C()) : C
 >new C() : C
 >C : typeof C
->member : {}
->a : any
+>member : { a: number; }
+>a : number
 >1 : 1

 (new C()).initializedMember.a = 1;